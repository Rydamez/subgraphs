type IgnoredAsset @entity {
  id: ID!
}

type Asset @entity {
  id: ID!
  decimals: Int!
  symbol: String!
  name: String!
  total: BigDecimal!
  holdings: [CurrentHolding!]! @derivedFrom(field: "asset")
  transfers: [Transfer!]! @derivedFrom(field: "asset")
}

type Vault @entity {
  id: ID!
  timestamp: BigInt!
  holdings: [CurrentHolding!]! @derivedFrom(field: "vault")
  portfolio: [HistoricalHolding!]!
  hourly: [HourlyPortfolio!]! @derivedFrom(field: "vault")
  daily: [DailyPortfolio!]! @derivedFrom(field: "vault")
  weekly: [WeeklyPortfolio!]! @derivedFrom(field: "vault")
  monthly: [MonthlyPortfolio!]! @derivedFrom(field: "vault")
  transfers: [Transfer!]! @derivedFrom(field: "vault")
  incoming: [IncomingTransfer!]! @derivedFrom(field: "vault")
  outgoing: [OutgoingTransfer!]! @derivedFrom(field: "vault")
}

type HourlyPortfolio @entity {
  id: ID!
  vault: Vault!
  holdings: [HistoricalHolding!]!
  timestamp: BigInt!
  close: BigInt!
}

type DailyPortfolio @entity {
  id: ID!
  vault: Vault!
  holdings: [HistoricalHolding!]!
  timestamp: BigInt!
  close: BigInt!
}

type WeeklyPortfolio @entity {
  id: ID!
  vault: Vault!
  holdings: [HistoricalHolding!]!
  timestamp: BigInt!
  close: BigInt!
}

type MonthlyPortfolio @entity {
  id: ID!
  vault: Vault!
  holdings: [HistoricalHolding!]!
  timestamp: BigInt!
  close: BigInt!
}

interface Holding {
  id: ID!
  vault: Vault!
  asset: Asset!
  balance: BigDecimal!
  timestamp: BigInt!

  tracked: Boolean!
  external: Boolean!
  portfolio: Boolean!
}

type CurrentHolding implements Holding @entity {
  id: ID!
  vault: Vault!
  asset: Asset!
  balance: BigDecimal!
  timestamp: BigInt!

  tracked: Boolean!
  external: Boolean!
  portfolio: Boolean!

  history: [HistoricalHolding!]! @derivedFrom(field: "current")
  transfers: [Transfer!]! @derivedFrom(field: "holding")
  incoming: [IncomingTransfer!]! @derivedFrom(field: "holding")
  outgoing: [OutgoingTransfer!]! @derivedFrom(field: "holding")
}

type HistoricalHolding implements Holding @entity {
  id: ID!
  vault: Vault!
  asset: Asset!
  balance: BigDecimal!
  timestamp: BigInt!

  tracked: Boolean!
  external: Boolean!
  portfolio: Boolean!

  current: CurrentHolding!
}

enum TransferType {
  IN
  OUT
}

interface Transfer {
  id: ID!
  timestamp: BigInt!
  type: TransferType!
  asset: Asset!
  vault: Vault!
  holding: CurrentHolding!
  amount: BigDecimal!
  balance: BigDecimal!
  transaction: String!
}

type OutgoingTransfer implements Transfer @entity {
  id: ID!
  timestamp: BigInt!
  type: TransferType!
  asset: Asset!
  vault: Vault!
  holding: CurrentHolding!
  recipient: String!
  amount: BigDecimal!
  balance: BigDecimal!
  transaction: String!
}

type IncomingTransfer implements Transfer @entity {
  id: ID!
  timestamp: BigInt!
  type: TransferType!
  asset: Asset!
  vault: Vault!
  holding: CurrentHolding!
  sender: String!
  amount: BigDecimal!
  balance: BigDecimal!
  transaction: String!
}
